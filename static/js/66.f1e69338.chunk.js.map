{"version":3,"file":"static/js/66.f1e69338.chunk.js","mappings":"4MACA,EAA0B,yBAA1B,EAAkG,6BAAlG,EAA0I,0BCA1I,EAA0B,yBAA1B,EAA0D,sBAA1D,EAA8F,6B,SCCjFA,EAAU,SAACC,GAAD,OACQ,IAA3BA,EAAMC,QAAQC,UACX,gBAAKC,UAAS,UAAKC,EAAL,YAAwBA,GAAtC,UACC,cAAGD,UAAWC,EAAd,SAA8BJ,EAAMC,QAAQI,UAE7C,gBAAKF,UAAWC,EAAhB,UACC,cAAGD,UAAWC,EAAd,SAA8BJ,EAAMC,QAAQI,QAN7B,ECDvB,EAAyB,2BAAzB,EAA6D,2BAA7D,EAA6F,uB,UCEhFC,EAAa,SAACN,GACzB,OACE,SAAC,KAAD,CAASO,GAAI,YAAcP,EAAMQ,OAAOC,GAAxC,UACE,iBAAKN,UAAWC,EAAhB,WACE,gBAAKM,IAAKV,EAAMQ,OAAOG,UAAWC,IAAI,SAAST,UAAWC,KAC1D,eAAID,UAAWC,EAAf,SAA4BJ,EAAMQ,OAAOK,WAKhD,E,UCZD,GAAgB,KAAO,yBAAyB,SAAW,6BAA6B,eAAiB,oC,uCCmB5FC,GAAkBC,EAAAA,EAAAA,GAAU,CAACC,KAAM,WAAjBD,EAfJ,SAACf,GAC1B,OACE,kBAAMiB,SAAUjB,EAAMkB,aAAcf,UAAWgB,EAAAA,KAAaC,OAAO,GAAnE,WACE,SAACC,EAAA,EAAD,CACEC,MAAOtB,EAAMuB,eACbV,KAAK,UACLV,UAAWgB,EAAAA,SACXK,UAAWC,EAAAA,EACXC,SAAUC,EAAAA,MAEZ,mBAAQxB,UAAWgB,EAAAA,eAAnB,oBAGL,ICZYS,EAAU,SAAC5B,GAMtB,OACE,iBAAKG,UAAWC,EAAhB,WACE,gBAAKD,UAAWC,EAAhB,SACGJ,EAAM6B,QAAQC,KAAK,SAAAtB,GAAM,OAAI,SAACF,EAAD,CAAYE,OAAQA,GAAaA,EAAOC,GAA5C,OAE5B,iBAAKN,UAAWC,EAAhB,UACGJ,EAAM+B,SAASD,KAAK,SAAA7B,GAAO,OAAI,SAACF,EAAD,CAASE,QAASA,GAAcA,EAAQQ,GAA5C,KAC5B,SAACK,EAAD,CAAiBS,eAAgBvB,EAAMuB,eAAgBN,SAZ5C,SAACe,GAChBhC,EAAMiC,WAAWD,EAASE,SAC1BF,EAASE,QAAU,EACpB,SAaF,E,8BChBKC,EAAAA,SAAAA,IAAAA,EAAAA,EAAAA,GAAAA,EAAAA,GAAAA,IAAAA,GAAAA,EAAAA,EAAAA,GAAAA,GAAAA,SAAAA,IAAAA,OAAAA,EAAAA,EAAAA,GAAAA,KAAAA,GAAAA,EAAAA,MAAAA,KAAAA,UAAAA,CAUH,OAVGA,EAAAA,EAAAA,GAAAA,EAAAA,CAAAA,CAAAA,IAAAA,SAAAA,MAEJ,WACE,OACE,SAACP,EAAD,CACAC,QAASO,KAAKpC,MAAM6B,QACpBE,SAAUK,KAAKpC,MAAM+B,SACrBE,WAAYG,KAAKpC,MAAMiC,YAG1B,OAVGE,CAAyBE,EAAAA,WAqB/B,GAAeC,EAAAA,EAAAA,KACbC,EAAAA,EAAAA,KAToB,SAACC,GACrB,MAAO,CACLT,SAAUS,EAAMX,QAAQY,aACxBZ,QAASW,EAAMX,QAAQa,YACvBnB,eAAgBiB,EAAMG,QAAQpB,eAEjC,GAG0B,CAACU,WAAAA,EAAAA,IAC1BW,EAAAA,EAFF,CAGET,E","sources":["webpack://01project/./src/components/Dialogs/Dialogs.module.css?1b2e","webpack://01project/./src/components/Dialogs/Message/Message.module.css?72d0","components/Dialogs/Message/Message.jsx","webpack://01project/./src/components/Dialogs/DialogItem/DialogItem.module.css?beb9","components/Dialogs/DialogItem/DialogItem.jsx","webpack://01project/./src/components/Dialogs/DialogForm.module.css?607a","components/Dialogs/DialogForm.jsx","components/Dialogs/Dialogs.jsx","components/Dialogs/DialogsContainer.jsx"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"dialogs\":\"Dialogs_dialogs__osw6l\",\"active\":\"Dialogs_active__BNpV7\",\"dialogsList\":\"Dialogs_dialogsList__A78m4\",\"messages\":\"Dialogs_messages__AtxlO\"};","// extracted by mini-css-extract-plugin\nexport default {\"message\":\"Message_message__fI9Wm\",\"text\":\"Message_text__hIujA\",\"currentUser\":\"Message_currentUser__rslNN\"};","import classes from './Message.module.css';\r\n\r\nexport const Message = (props) => \r\n    props.message.authorId === 0 ? \r\n      (<div className={`${classes.message} ${classes.currentUser}`} >\r\n        <p className={classes.text} >{props.message.text}</p> \r\n      </div>) :\r\n      (<div className={classes.message} >\r\n        <p className={classes.text} >{props.message.text}</p> \r\n      </div>)\r\n","// extracted by mini-css-extract-plugin\nexport default {\"dialog\":\"DialogItem_dialog__SkqFr\",\"avatar\":\"DialogItem_avatar__Y9GeS\",\"h3\":\"DialogItem_h3__+rAUC\"};","import classes from './DialogItem.module.css';\r\nimport { NavLink } from 'react-router-dom';\r\n\r\nexport const DialogItem = (props) => {\r\n  return(\r\n    <NavLink to={'/Dialogs/' + props.dialog.id} >\r\n      <div className={classes.dialog}>\r\n        <img src={props.dialog.avatarSrc} alt=\"avatar\" className={classes.avatar} />\r\n        <h3 className={classes.h3}>{props.dialog.name}</h3>\r\n      </div>  \r\n    </NavLink>\r\n    \r\n  );\r\n}","// extracted by mini-css-extract-plugin\nexport default {\"from\":\"DialogForm_from__KcTQ2\",\"textarea\":\"DialogForm_textarea__cGw71\",\"textareaButton\":\"DialogForm_textareaButton__bRaKZ\"};","import styles from \"./DialogForm.module.css\";\r\nimport {Field, reduxForm} from 'redux-form';\r\nimport { Textarea } from \"../FormControls/FormControls\";\r\nimport { required } from \"../../utils/formValidators\";\r\n\r\nexport const MessageForm = (props) => {\r\n  return (\r\n    <form onSubmit={props.handleSubmit} className={styles.form} action=\"\">\r\n      <Field\r\n        value={props.newMessageText}\r\n        name=\"newText\"\r\n        className={styles.textarea}\r\n        component={Textarea}\r\n        validate={required}\r\n      ></Field>\r\n      <button className={styles.textareaButton}>Send</button>\r\n    </form>\r\n  );\r\n};\r\n\r\nexport const DialogReduxForm = reduxForm({form: 'message'})(MessageForm)\r\n","import classes from './Dialogs.module.css';\r\nimport { Message } from './Message/Message';\r\nimport { DialogItem } from './DialogItem/DialogItem';\r\nimport React from 'react';\r\nimport { DialogReduxForm} from './DialogForm';\r\n\r\nexport const Dialogs = (props) => {\r\n  const onSubmit = (formData) => {\r\n    props.addMessage(formData.newText);\r\n    formData.newText = '';\r\n  }\r\n\r\n  return (\r\n    <div className={classes.dialogs}>\r\n      <div className={classes.dialogsList}>\r\n        {props.dialogs.map( dialog => <DialogItem dialog={dialog} key={dialog.id} />)}\r\n      </div>\r\n      <div className={classes.messages}>\r\n        {props.messages.map( message => <Message message={message} key={message.id}/>)}\r\n        <DialogReduxForm newMessageText={props.newMessageText} onSubmit={onSubmit} />\r\n      </div>\r\n    </div>\r\n  );\r\n} \r\n","import {addMessage} from \"../../redux/dialogsReducer\";\r\nimport { Dialogs } from \"./Dialogs\";\r\nimport { connect } from \"react-redux/es/exports\";\r\nimport React from \"react\";\r\nimport { withAuthRedirect } from '../hoc/withAuthRedirect';\r\nimport { compose } from \"redux\";\r\n\r\nclass DialogsContainer extends React.Component {\r\n  \r\n  render () {\r\n    return (\r\n      <Dialogs\r\n      dialogs={this.props.dialogs}\r\n      messages={this.props.messages}\r\n      addMessage={this.props.addMessage}\r\n      />\r\n    );\r\n  }\r\n}\r\n\r\nlet mapStateToProps = (state) => {\r\n  return {\r\n    messages: state.dialogs.messagesData,\r\n    dialogs: state.dialogs.dialogsData,\r\n    newMessageText: state.profile.newMessageText,\r\n  }\r\n}\r\n\r\nexport default compose(\r\n  connect(mapStateToProps, {addMessage}),\r\n  withAuthRedirect\r\n)(DialogsContainer);\r\n"],"names":["Message","props","message","authorId","className","classes","text","DialogItem","to","dialog","id","src","avatarSrc","alt","name","DialogReduxForm","reduxForm","form","onSubmit","handleSubmit","styles","action","Field","value","newMessageText","component","Textarea","validate","required","Dialogs","dialogs","map","messages","formData","addMessage","newText","DialogsContainer","this","React","compose","connect","state","messagesData","dialogsData","profile","withAuthRedirect"],"sourceRoot":""}